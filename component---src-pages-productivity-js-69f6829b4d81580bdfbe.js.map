{"version":3,"file":"component---src-pages-productivity-js-69f6829b4d81580bdfbe.js","mappings":"iKAoEA,IAzDY,WAAO,IAAD,IACJA,GAAOC,EAAAA,EAAAA,gBAAe,cAoBtBC,EAAM,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBF,OACjCG,EAAM,UAAGL,EAAKG,KAAKC,oBAAb,aAAG,EAAwBC,OAEvC,OACE,uBAAKC,UAAU,OACb,gBAAC,EAAAC,EAAD,CACED,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,4BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBARN,uBAUCZ,MAAAA,OAAA,EAAAA,EAAQa,OACP,0BACGb,MAAAA,OAAA,EAAAA,EAAQc,UAAW,KADtB,6BAGE,qBAAGC,KAAI,gCAAiCZ,MAAAA,OAAjC,EAAiCA,EAAQa,WAAhD,YAGC,QACD,qBAAGD,KAAI,0BAA4BZ,EAAOc,QAA1C,UAGA,IAVF,yBAU6B,IAC3B,qBAAGF,KAAO,iCAAV,c,qFCMhB,IAzDsB,SAAC,GAAyC,IAAD,EAAtCjB,EAAsC,EAAtCA,KAAMoB,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxCC,GAAY,UAAAvB,EAAKG,KAAKC,oBAAV,eAAwBoB,QAAxB,QAClB,OAAqB,IAAjBH,EAAMI,OAEN,gBAAC,IAAD,CAAQL,SAAUA,EAAUI,MAAOD,GACjC,gBAAC,IAAD,MACA,uLAUJ,gBAAC,IAAD,CAAQH,SAAUA,EAAUI,MAAOD,GACjC,gBAAC,IAAD,CAAKC,MAASF,IACd,gBAAC,IAAD,MACA,sBAAII,MAAO,CAAEC,UAAU,SACpBN,EAAMO,KAAI,SAAAC,GACT,IAAML,EAASK,EAAKC,YAAYN,OAASK,EAAKE,OAAOC,KACrD,OACE,sBAAIC,IAAKJ,EAAKE,OAAOC,MACnB,2BACE1B,UAAU,iBACV4B,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAC,KAAD,CAAMC,GAAIR,EAAKE,OAAOC,KAAMM,SAAS,OACnC,wBAAMA,SAAS,YAAYd,KAG/B,6BAAQK,EAAKC,YAAYS,OAE3B,+BACE,qBACEC,wBAAyB,CACvBC,OAAQZ,EAAKC,YAAYY,aAAeb,EAAKc,SAE/CL,SAAS,gBAEV,iCAMX,4BAEF,gBAAC,IAAD,S,6ECxDKM,EAAc,sCCwBvB,EArBa,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SACzB,OACE,2BACE,gDACA,6BAAQD,GACR,2BACE,sBAAIvC,UDVQ,mCCWV,sBAAIA,UAAWsC,GAAa,gBAAC,EAAAR,KAAD,CAAMC,GAAG,KAAT,SAC5B,sBAAI/B,UAAWsC,GAAa,gBAAC,EAAAR,KAAD,CAAMC,GAAG,iBAAT,iBAC5B,sBAAI/B,UAAWsC,GAAa,gBAAC,EAAAR,KAAD,CAAMC,GAAG,cAAT,cAC5B,sBAAI/B,UAAWsC,GAAa,gBAAC,EAAAR,KAAD,CAAMC,GAAG,cAAT,gBAGhC,4BACE,0BAAKQ,GACJC,M,oDCiBX,UAnC0B,SAAC,GAAsB,IAArB9C,EAAoB,EAApBA,KAAMoB,EAAc,EAAdA,SAC1BC,EAAQrB,EAAK+C,kBAAkBC,MAAMC,QAAO,SAAApB,GAAO,MAAqC,iBAA9BA,EAAKC,YAAYR,YAEjF,OACE,4BACG,gBAAC,IAAD,CAAcF,SAAUA,EAAUpB,KAAMA,EAAMqB,MAAOA,EAAOC,SAAU,oB","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/components/category-list.js","webpack://gatsby-starter-blog/./src/components/navbar.module.css","webpack://gatsby-starter-blog/./src/components/navbar.js","webpack://gatsby-starter-blog/./src/pages/productivity.js"],"sourcesContent":["/**\r\n * Bio component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport { StaticImage } from \"gatsby-plugin-image\"\r\n\r\nconst Bio = () => {\r\n        const data = useStaticQuery(graphql `\r\n    query BioQuery {\r\n      site {\r\n        siteMetadata {\r\n          author {\r\n            name\r\n            summary\r\n          }\r\n          social {\r\n            linkedin\r\n            email\r\n            phone\r\n            github\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n        // Set these values by editing \"siteMetadata\" in gatsby-config.js\r\n        const author = data.site.siteMetadata?.author\r\n        const social = data.site.siteMetadata?.social\r\n\r\n        return (\r\n          <div className=\"bio\">\r\n            <StaticImage\r\n              className=\"bio-avatar\"\r\n              layout=\"fixed\"\r\n              formats={[\"auto\", \"webp\", \"avif\"]}\r\n              src=\"../images/profile-pic.JPG\"\r\n              width={50}\r\n              height={50}\r\n              quality={95}\r\n              alt=\"Profile picture\"\r\n            />\r\n            {author?.name && (\r\n              <p>\r\n                {author?.summary || null}\r\n                {`Feel free to follow me on `}\r\n                <a href={`https://www.linkedin.com/in/${social?.linkedin}`}>\r\n                  Linkedin \r\n                </a>\r\n                {' and '}\r\n                <a href={`https://www.github.com/${social.github}`}>\r\n                 Github\r\n                </a>\r\n               {' '} or reach out through {' '}\r\n                <a href = \"mailto: j2nicola@uwaterloo.ca\">\r\n                  email.\r\n                  </a>\r\n              </p>\r\n            )}\r\n          </div>\r\n        )\r\n      }\r\n\r\nexport default Bio","import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\nimport Navbar from \"../components/navbar\"\r\n\r\nconst CategoryIndex = ({ data, location, posts, category }) => {\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`\r\n  if (posts.length === 0) {\r\n    return (\r\n      <Layout location={location} title={siteTitle}>\r\n        <Bio />\r\n        <p>\r\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\r\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\r\n          gatsby-config.js).\r\n        </p>\r\n      </Layout>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <Seo title = {category}/>\r\n      <Navbar></Navbar>\r\n      <ol style={{ listStyle: `none` }}>\r\n        {posts.map(post => {\r\n          const title = (post.frontmatter.title || post.fields.slug)\r\n          return (\r\n            <li key={post.fields.slug}>\r\n              <article\r\n                className=\"post-list-item\"\r\n                itemScope\r\n                itemType=\"http://schema.org/Article\"\r\n              >\r\n                <header>\r\n                  <h2>\r\n                    <Link to={post.fields.slug} itemProp=\"url\">\r\n                      <span itemProp=\"headline\">{title}</span>\r\n                    </Link>\r\n                  </h2>\r\n                  <small>{post.frontmatter.date}</small>\r\n                </header>\r\n                <section>\r\n                  <p\r\n                    dangerouslySetInnerHTML={{\r\n                      __html: post.frontmatter.description || post.excerpt,\r\n                    }}\r\n                    itemProp=\"description\"\r\n                  />\r\n                   <br></br>\r\n                </section>\r\n              </article>\r\n            </li>\r\n          )\r\n        })}\r\n        <hr />\r\n      </ol>\r\n      <Bio />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default CategoryIndex\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      nodes {\r\n        excerpt\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          date(formatString: \"MMMM DD, YYYY\")\r\n          title\r\n          description\r\n          category\r\n          \r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","// extracted by mini-css-extract-plugin\nexport var container = \"navbar-module--container--WSrYO\";\nexport var heading = \"navbar-module--heading--YLLII\";\nexport var navLinks = \"navbar-module--nav-links--+CChw\";\nexport var navLinkItem = \"navbar-module--nav-link-item--p4meV\";\nexport var navLinkText = \"navbar-module--nav-link-text--W-vc7\";","import * as React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport {\r\n    navLinks,\r\n    navLinkItem\r\n  } from './navbar.module.css'\r\n\r\nconst Navbar = ({ pageTitle, children }) => {\r\n    return (\r\n      <div>\r\n        <h1>Blog and Portfolio</h1>\r\n        <title>{pageTitle}</title>\r\n        <nav>\r\n          <ul className={navLinks}>\r\n            <li className={navLinkItem}><Link to=\"/\">Home</Link></li>\r\n            <li className={navLinkItem}><Link to=\"/productivity\">Productivity</Link></li>\r\n            <li className={navLinkItem}><Link to=\"/resources\">Resources</Link></li>\r\n            <li className={navLinkItem}><Link to=\"/gratitude\">Gratitude</Link></li>\r\n          </ul>\r\n        </nav>\r\n        <main>\r\n          <h1>{pageTitle}</h1>\r\n          {children}\r\n        </main>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Navbar","import * as React from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport CategoryList from '../components/category-list'\r\n\r\nconst ProductivityIndex = ({data, location}) => {\r\n  const posts = data.allMarkdownRemark.nodes.filter(post=>{return post.frontmatter.category === \"Productivity\"})\r\n\r\n  return (\r\n    <main> \r\n       <CategoryList location={location} data={data} posts={posts} category={\"Productivity\"}/>\r\n    </main>\r\n       \r\n  )\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      nodes {\r\n        excerpt\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          date(formatString: \"MMMM DD, YYYY\")\r\n          title\r\n          description\r\n          category\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default ProductivityIndex"],"names":["data","useStaticQuery","author","site","siteMetadata","social","className","S","layout","formats","src","width","height","quality","alt","name","summary","href","linkedin","github","location","posts","category","siteTitle","title","length","style","listStyle","map","post","frontmatter","fields","slug","key","itemScope","itemType","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt","navLinkItem","pageTitle","children","allMarkdownRemark","nodes","filter"],"sourceRoot":""}