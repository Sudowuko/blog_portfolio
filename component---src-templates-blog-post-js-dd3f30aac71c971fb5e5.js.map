{"version":3,"file":"component---src-templates-blog-post-js-dd3f30aac71c971fb5e5.js","mappings":"iKAoEA,IAzDY,WAAO,IAAD,IACJA,GAAOC,EAAAA,EAAAA,gBAAe,cAoBtBC,EAAM,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBF,OACjCG,EAAM,UAAGL,EAAKG,KAAKC,oBAAb,aAAG,EAAwBC,OAEvC,OACE,uBAAKC,UAAU,OACb,gBAAC,EAAAC,EAAD,CACED,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,4BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBARN,uBAUCZ,MAAAA,OAAA,EAAAA,EAAQa,OACP,0BACGb,MAAAA,OAAA,EAAAA,EAAQc,UAAW,KADtB,6BAGE,qBAAGC,KAAI,gCAAiCZ,MAAAA,OAAjC,EAAiCA,EAAQa,WAAhD,YAGC,QACD,qBAAGD,KAAI,0BAA4BZ,EAAOc,QAA1C,UAGA,IAVF,yBAU6B,IAC3B,qBAAGF,KAAO,iCAAV,c,6ECvDLG,EAAc,sCCwBvB,EArBa,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SACzB,OACE,2BACE,gDACA,6BAAQD,GACR,2BACE,sBAAIf,UDVQ,mCCWV,sBAAIA,UAAWc,GAAa,gBAAC,EAAAG,KAAD,CAAMC,GAAG,KAAT,SAC5B,sBAAIlB,UAAWc,GAAa,gBAAC,EAAAG,KAAD,CAAMC,GAAG,iBAAT,iBAC5B,sBAAIlB,UAAWc,GAAa,gBAAC,EAAAG,KAAD,CAAMC,GAAG,cAAT,cAC5B,sBAAIlB,UAAWc,GAAa,gBAAC,EAAAG,KAAD,CAAMC,GAAG,cAAT,gBAGhC,4BACE,0BAAKH,GACJC,M,4FC+CX,UA7DyB,SAAC,GAAsB,IAAD,EAApBtB,EAAoB,EAApBA,KAAMyB,EAAc,EAAdA,SACzBC,EAAO1B,EAAK2B,eACZC,GAAY,UAAA5B,EAAKG,KAAKC,oBAAV,eAAwByB,QAAxB,QACVC,EAAmB9B,EAAnB8B,SAAUC,EAAS/B,EAAT+B,KAElB,OACE,gBAAC,IAAD,CAAQN,SAAUA,EAAUI,MAAOD,GACjC,gBAAC,IAAD,MACA,gBAAC,IAAD,CACEC,MAAOH,EAAKM,YAAYH,MACxBI,YAAaP,EAAKM,YAAYC,aAAeP,EAAKQ,UAEpD,2BACE5B,UAAU,YACV6B,WAAS,EACTC,SAAS,6BAET,8BACE,sBAAIC,SAAS,YAAYX,EAAKM,YAAYH,OAC1C,yBAAIH,EAAKM,YAAYM,OAEvB,2BACEC,wBAAyB,CAAEC,OAAQd,EAAKe,MACxCJ,SAAS,gBAEX,2BACA,8BACE,gBAAC,IAAD,QAGJ,uBAAK/B,UAAU,iBACb,sBACEoC,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,0BACGjB,GACC,gBAAC,EAAAP,KAAD,CAAMC,GAAIM,EAASkB,OAAOC,KAAMC,IAAI,QAApC,KACKpB,EAASE,YAAYH,QAI9B,0BACGE,GACC,gBAAC,EAAAR,KAAD,CAAMC,GAAIO,EAAKiB,OAAOC,KAAMC,IAAI,QAC7BnB,EAAKC,YAAYH,MADpB,SAOR,8B","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/components/navbar.module.css","webpack://gatsby-starter-blog/./src/components/navbar.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["/**\r\n * Bio component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport { StaticImage } from \"gatsby-plugin-image\"\r\n\r\nconst Bio = () => {\r\n        const data = useStaticQuery(graphql `\r\n    query BioQuery {\r\n      site {\r\n        siteMetadata {\r\n          author {\r\n            name\r\n            summary\r\n          }\r\n          social {\r\n            linkedin\r\n            email\r\n            phone\r\n            github\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n        // Set these values by editing \"siteMetadata\" in gatsby-config.js\r\n        const author = data.site.siteMetadata?.author\r\n        const social = data.site.siteMetadata?.social\r\n\r\n        return (\r\n          <div className=\"bio\">\r\n            <StaticImage\r\n              className=\"bio-avatar\"\r\n              layout=\"fixed\"\r\n              formats={[\"auto\", \"webp\", \"avif\"]}\r\n              src=\"../images/profile-pic.JPG\"\r\n              width={50}\r\n              height={50}\r\n              quality={95}\r\n              alt=\"Profile picture\"\r\n            />\r\n            {author?.name && (\r\n              <p>\r\n                {author?.summary || null}\r\n                {`Feel free to follow me on `}\r\n                <a href={`https://www.linkedin.com/in/${social?.linkedin}`}>\r\n                  Linkedin \r\n                </a>\r\n                {' and '}\r\n                <a href={`https://www.github.com/${social.github}`}>\r\n                 Github\r\n                </a>\r\n               {' '} or reach out through {' '}\r\n                <a href = \"mailto: j2nicola@uwaterloo.ca\">\r\n                  email.\r\n                  </a>\r\n              </p>\r\n            )}\r\n          </div>\r\n        )\r\n      }\r\n\r\nexport default Bio","// extracted by mini-css-extract-plugin\nexport var container = \"navbar-module--container--WSrYO\";\nexport var heading = \"navbar-module--heading--YLLII\";\nexport var navLinks = \"navbar-module--nav-links--+CChw\";\nexport var navLinkItem = \"navbar-module--nav-link-item--p4meV\";\nexport var navLinkText = \"navbar-module--nav-link-text--W-vc7\";","import * as React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport {\r\n    navLinks,\r\n    navLinkItem\r\n  } from './navbar.module.css'\r\n\r\nconst Navbar = ({ pageTitle, children }) => {\r\n    return (\r\n      <div>\r\n        <h1>Blog and Portfolio</h1>\r\n        <title>{pageTitle}</title>\r\n        <nav>\r\n          <ul className={navLinks}>\r\n            <li className={navLinkItem}><Link to=\"/\">Home</Link></li>\r\n            <li className={navLinkItem}><Link to=\"/productivity\">Productivity</Link></li>\r\n            <li className={navLinkItem}><Link to=\"/resources\">Resources</Link></li>\r\n            <li className={navLinkItem}><Link to=\"/gratitude\">Gratitude</Link></li>\r\n          </ul>\r\n        </nav>\r\n        <main>\r\n          <h1>{pageTitle}</h1>\r\n          {children}\r\n        </main>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Navbar","import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\nimport Navbar from \"../components/navbar\"\r\n\r\nconst BlogPostTemplate = ({data, location}) => {\r\n  const post = data.markdownRemark\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`\r\n  const { previous, next } = data\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <Navbar></Navbar>\r\n      <Seo\r\n        title={post.frontmatter.title}\r\n        description={post.frontmatter.description || post.excerpt}\r\n      />\r\n      <article\r\n        className=\"blog-post\"\r\n        itemScope\r\n        itemType=\"http://schema.org/Article\"\r\n      >\r\n        <header>\r\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\r\n          <p>{post.frontmatter.date}</p>\r\n        </header>\r\n        <section\r\n          dangerouslySetInnerHTML={{ __html: post.html }}\r\n          itemProp=\"articleBody\"\r\n        />\r\n        <hr />\r\n        <footer>\r\n          <Bio />\r\n        </footer>\r\n      </article>\r\n      <nav className=\"blog-post-nav\">\r\n        <ul\r\n          style={{\r\n            display: `flex`,\r\n            flexWrap: `wrap`,\r\n            justifyContent: `space-between`,\r\n            listStyle: `none`,\r\n            padding: 0,\r\n          }}\r\n        >\r\n          <li>\r\n            {previous && (\r\n              <Link to={previous.fields.slug} rel=\"prev\">\r\n                ← {previous.frontmatter.title}\r\n              </Link>\r\n            )}\r\n          </li>\r\n          <li>\r\n            {next && (\r\n              <Link to={next.fields.slug} rel=\"next\">\r\n                {next.frontmatter.title} →\r\n              </Link>\r\n            )}\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <br></br>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug(\r\n    $id: String!\r\n    $previousPostId: String\r\n    $nextPostId: String\r\n  ) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    markdownRemark(id: { eq: $id }) {\r\n      id\r\n      excerpt(pruneLength: 160)\r\n      html\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        description\r\n        category\r\n      }\r\n    }\r\n    previous: markdownRemark(id: { eq: $previousPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n        category\r\n      }\r\n    }\r\n    next: markdownRemark(id: { eq: $nextPostId }) {\r\n      fields {\r\n        slug\r\n        \r\n      }\r\n      frontmatter {\r\n        title\r\n        category\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["data","useStaticQuery","author","site","siteMetadata","social","className","S","layout","formats","src","width","height","quality","alt","name","summary","href","linkedin","github","navLinkItem","pageTitle","children","Link","to","location","post","markdownRemark","siteTitle","title","previous","next","frontmatter","description","excerpt","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","fields","slug","rel"],"sourceRoot":""}